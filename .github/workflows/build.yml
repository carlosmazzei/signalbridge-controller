name: "Build"
on:
  push:
    paths-ignore:
      - '.devcontainer/**'
  release:
    types: [published]

env:
  BUILD_TYPE: Release
  PICO_PLATFORM: rp2040
  PICO_BOARD: pico
  PICO_SDK_PATH: ./lib/pico-sdk
  FREERTOS_KERNEL_PATH: ./lib/FreeRTOS-Kernel
  PICO_TOOLCHAIN_PATH: /usr/bin

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/devcontainer-embedded:latest
      options: --user=root
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Verify installed toolchain version
        run: arm-none-eabi-gcc --version

      - name: Create Build Environment
        run: mkdir -p build  

      - name: Configure CMake
        working-directory: build  
        shell: bash
        run: |
          cmake .. \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DPICO_SDK_PATH=${{ env.PICO_SDK_PATH }} \
            -DFREERTOS_KERNEL_PATH=${{ env.FREERTOS_KERNEL_PATH }} \
            -DPICO_TOOLCHAIN_PATH=${{ env.PICO_TOOLCHAIN_PATH }}

      - name: Build
        working-directory: build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Archive Doxygen Documentation
        run: |
          echo "Archiving Doxygen documentation"
          if [ -d "build/docs/doc_doxygen" ]; then
            tar -czf build/src/doc.tar.gz -C build/docs/ doc_doxygen
          else
            echo "Doxygen documentation not found, skipping archive"
          fi

      - name: Store Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pico-build
          path: |
            build/src/*.uf2
            build/src/*.elf
            build/src/doc.tar.gz
          retention-days: 10

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: pico-build
          path: artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*.uf2
            artifacts/*.elf
            artifacts/doc.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
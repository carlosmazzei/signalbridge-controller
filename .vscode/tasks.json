{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Initialize Submodules",
            "type": "shell",
            "command": "git",
            "args": [
                "submodule",
                "update",
                "--init",
                "--recursive"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Initialize all git submodules recursively"
        },
        {
            "label": "Update Submodules",
            "type": "shell",
            "command": "git",
            "args": [
                "submodule",
                "update",
                "--recursive",
                "--remote"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Update all submodules to their latest commits"
        },
        {
            "label": "CMake Configure",
            "type": "shell",
            "command": "cmake",
            "args": [
                ".."
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Configure CMake build system",
            "dependsOn": "Create Build Directory"
        },
        {
            "label": "Create Build Directory",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p",
                "build"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Create build directory if it doesn't exist"
        },
        {
            "label": "Build Project",
            "type": "shell",
            "command": "make",
            "args": [
                "-j$(sysctl -n hw.ncpu)"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Build the project using make",
            "dependsOn": "CMake Configure"
        },
        {
            "label": "Clean Build",
            "type": "shell",
            "command": "rm",
            "args": [
                "-rf",
                "build"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Remove the build directory"
        },
        {
            "label": "Full Clean Build",
            "type": "shell",
            "command": "echo",
            "args": [
                "Build completed successfully!"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Clean build directory and rebuild project",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Clean Build",
                "Build Project"
            ]
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "doxygen",
            "args": [
                "Doxyfile"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Generate Doxygen documentation"
        },
        {
            "label": "uncrustify",
            "type": "shell",
            "command": "uncrustify",
            "args": [
                "-c",
                "${workspaceFolder}/uncrustify.cfg",
                "${file}",
                "--replace",
                "--no-backup"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Format current file with uncrustify code formatter"
        },
        {
            "label": "Configure Tests",
            "type": "shell",
            "command": "echo",
            "args": [
                "Test build directory created"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Create test build directory (CMake config not working)",
            "dependsOn": "Create Test Build Directory"
        },
        {
            "label": "Create Test Build Directory",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p",
                "test/build"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Create test build directory if it doesn't exist"
        },
        {
            "label": "Build Tests",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd test && mkdir -p build && cd build && cmake .. && make"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Build CMocka unit tests",
            "dependsOn": "Configure Tests"
        },
        {
            "label": "Run All Tests",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd test/build && make test_all"
            ],
            "group": {
                "kind": "test", 
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Run all CMocka unit tests using CTest",
            "dependsOn": "Build Tests"
        },
        {
            "label": "Generate Coverage Report",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd test && rm -rf build && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON .. && make && make coverage"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Generate HTML coverage report using CMake target"
        },
        {
            "label": "Clean Tests",
            "type": "shell",
            "command": "rm",
            "args": [
                "-rf",
                "test/build"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Remove test build directory"
        },
        {
            "label": "uncrustify all C/C++ files",
            "type": "shell",
            "command": "find",
            "args": [
                "${workspaceFolder}/src",
                "${workspaceFolder}/include",
                "-name",
                "*.c",
                "-o",
                "-name",
                "*.cpp",
                "-o", 
                "-name",
                "*.h",
                "-o",
                "-name",
                "*.hpp",
                "|",
                "xargs",
                "uncrustify",
                "-c",
                "${workspaceFolder}/uncrustify.cfg",
                "--replace",
                "--no-backup"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Format all C/C++ files in src/ and include/ directories with uncrustify"
        }
    ]
}